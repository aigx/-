package com.agx.Bag;

import java.util.Iterator;
import java.util.Random;

public class ArrayBag implements BagADT{

	private int count;
	private final int NOT_FOUND=-1;
	private final int DEFAULT_CAPACITY=100;
	private Object[] contents;
	private static Random rand = new Random();
	
	public ArrayBag(){
		contents = new Object[DEFAULT_CAPACITY];
		count = 0;
	}
	
	public ArrayBag(int capacity){
		contents = new Object[capacity];
		count = 0;
	}
	
	public void add(Object element) {

		if(size()==contents.length){
			expandCapacity();
		}
		contents[count] = element;
		count++;
	}

	private void expandCapacity() {

		Object[] capac = new Object[size()*2];
		for(int i = 0;i<size();i++){
			capac[i]=contents[i];
		}
		contents = capac;
	}

	public void addAll(BagADT bag) {
		// TODO Auto-generated method stub
		Iterator iter = bag.iterator();
		while(iter.hasNext()){
			add(iter.next());
		}
	}

	public Object removeRandom() {
		
		int obj = rand.nextInt(count);
		Object con = contents[obj];
		contents[obj] = contents[count-1];
		contents[count-1] = null;
		count--;
		return con;
	}

	public Object remove(Object element) {

		
		int search=NOT_FOUND;
		for(int i = 0;i<count;i++){
			if(contents[i].equals(element)&&search==NOT_FOUND){
				search=i;
			}	
		}
		contents[search]=contents[count-1];
		contents[search]=null;
		Object obj = contents[search];
		count--;
		return obj;
		
	}

	public BagADT union(BagADT set) {

		
		return null;
	}

	public boolean contains(Object target) {

		
		return false;
	}

	public boolean equals(BagADT bag) {

		
		return false;
	}

	public boolean isEmpty() {
		
		return size()==0;
	}

	public int size() {
		// TODO Auto-generated method stub
		return count;
	}

	public Iterator iterator() {
		// TODO Auto-generated method stub
		return null;
	}

}
